@model GuideMe.Models.Business_models.Place
@{
    ViewBag.Title = "Create";
}
<section style="background-image:url(https://0i.is/4inK);background-size:cover">
    <h2 style="text-align:center">Add place</h2>


    @using (Html.BeginForm("create", "places", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4 style="text-align:center">City</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container h-100">
        <div class="row h-100 justify-content-center align-items-center">
            <div class="explore-search-form">
                <!-- Tabs Content -->
                @*<div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GoogleLocation, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GoogleLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GoogleLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("place Image", new { @class = "control-label" })
                    <div class="col-md-10">

                        @Html.TextBoxFor(m => m.ImageFile, new { id = "upload",type = "file", accept = ".png,.jpg,.jpeg" })
                        @Html.ValidationMessageFor(m => m.ImageFile)
                    </div>

                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button id="submit" type="submit" value="Create" class="btn dorne-btn mt-50 bg-white text-dark"><i class="fa fa-plus-circle" aria-hidden="true"></i> Create</button>
                        </div>
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })
                    </div>

                </div>
        </div>
    </div>
</div>

    }
                    <br />
    </section>
    



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @*<script>
            document.getElementById("submit").onclick = function () {
                debugger;
                var filename = document.getElementById("upload").value.toLowerCase();
                var re = /(\.jpg|\.jpeg|\.png)$/i;
                if (!re.exec(filename)) {
                    alert("File extension not supported!");
                }

            }
        </script>*@
    }



